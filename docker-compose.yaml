networks:
  kong-net:
    name: kong-net
    driver: bridge
services:
  postgres:
    networks:
      - kong-net
    image: postgres:13.1
    container_name: postgres
    ports:
      - "5432:5432"
    hostname: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    environment:
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_USER: kong
      POSTGRES_PG_TIMEOUT: 60000

  kong-migrations:
    networks:
      - kong-net
    image: ${KONG_IMAGE:-kong/kong-gateway:latest}
    container_name: kong-migrations
    depends_on:
      - postgres
    command: kong migrations bootstrap
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: password
  kong-migrations-up:
    networks:
      - kong-net
    image: ${KONG_IMAGE:-kong/kong-gateway:latest}
    container_name: kong-migrations-up
    depends_on:
      - kong-migrations
    command: kong migrations up && kong-migrations finish
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: password
  kong-cp:
    networks:
      - kong-net
    image: ${KONG_IMAGE:-kong/kong-gateway:latest}
    container_name: kong-cp
    hostname: kong-cp
    user: kong
    depends_on:
      - kong-migrations-up
    volumes:
      - ${PWD}/logs:/srv/shared/logs
      - ${PWD}/ssl:/srv/shared/ssl
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    ports:
      - "8001-8006:8001-8006/tcp"
      - "8100:8100/tcp"
      - "8444-8447:8444-8447/tcp"
    environment:
      #KONG_NGINX_HTTP_LUA_SHARED_DICT: sentinel_counters 2m
      E2E_PLUGIN_ROOT_CA_PATH: /srv/shared/e2e/ca.crt
      KONG_PLUGINS: bundled
      KONG_LOG_LEVEL: "debug"
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_PASSWORD: password
      KONG_ROLE: control_plane
      KONG_CLUSTER_CERT: /srv/shared/ssl/cluster.crt
      KONG_CLUSTER_CERT_KEY: /srv/shared/ssl/cluster.key
      KONG_CLUSTER_DATA_PLANE_PURGE_DELAY: 600
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 http2 ssl"
      KONG_ADMIN_GUI_LISTEN: "0.0.0.0:8002, 0.0.0.0:8445 http2 ssl"
      KONG_PORTAL_GUI_LISTEN: "0.0.0.0:8003, 0.0.0.0:8446 http2 ssl"
      KONG_PORTAL_API_LISTEN: "0.0.0.0:8004, 0.0.0.0:8447 http2 ssl"
      KONG_STATUS_LISTEN: "0.0.0.0:8100"
      KONG_CLUSTER_LISTEN: "0.0.0.0:8005"
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_MAX_CONCURRENT_QUERIES: 5
      KONG_ADMIN_GUI_ACCESS_LOG: /srv/shared/logs/admingui_access.log
      KONG_ADMIN_GUI_ERROR_LOG: /srv/shared/logs/admingui_error.log
      KONG_PORTAL_API_ACCESS_LOG: /srv/shared/logs/portalapi_access.log
      KONG_PORTAL_API_ERROR_LOG: /srv/shared/logs/portalapi_error.log
      KONG_PORTAL_GUI_ACCESS_LOG: /srv/shared/logs/portalgui_access.log
      KONG_PORTAL_GUI_ERROR_LOG: /srv/shared/logs/portalgui_error.log
      KONG_STATUS_ACCESS_LOG: /srv/shared/logs/status_access.log
      KONG_STATUS_ERROR_LOG: /srv/shared/logs/status_error.log
      KONG_AUDIT_LOG: "off"
      KONG_STATUS_SSL_CERT_KEY: "/srv/shared/ssl/server.key"
      KONG_STATUS_SSL_CERT: "/srv/shared/ssl/server.crt"
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_VITALS: "on"
      KONG_ENFORCE_RBAC: "off"
      KONG_ADMIN_API_URI: ${KONG_ADMIN_API_URI:-http://localhost:8001}
      KONG_ADMIN_SSL_CERT_KEY: "/srv/shared/ssl/server.key"
      KONG_ADMIN_SSL_CERT: "/srv/shared/ssl/server.crt"
      KONG_ADMIN_GUI_URL: ${KONG_ADMIN_GUI_URL:-http://localhost:8002}
      KONG_ADMIN_GUI_SSL_CERT_KEY: "/srv/shared/ssl/server.key"
      KONG_ADMIN_GUI_SSL_CERT: "/srv/shared/ssl/server.crt"
      KONG_PORTAL: "on"
      KONG_PORTAL_GUI_PROTOCOL: "http"
      KONG_PORTAL_GUI_HOST: ${KONG_PORTAL_GUI_HOST:-localhost:8003}
      KONG_PORTAL_API_URL: ${KONG_PORTAL_API_URL:-http://localhost:8003}
      KONG_PORTAL_AUTO_APPROVE: true
      KONG_PORTAL_EMAIL_VERIFICATION: "off"
      KONG_PORTAL_EMAILS_FROM: "kongtest@gmail.com"
      KONG_PORTAL_EMAILS_REPLY_TO: "kongtest@gmail.com"
      KONG_ADMIN_EMAILS_FROM: "kongtest@gmail.com"
      KONG_ADMIN_EMAILS_REPLY_TO: "kongtest@gmail.com"
      KONG_SMTP_MOCK: "off"
      KONG_SMTP_ADMIN_EMAILS: "kongtest@gmail.com"
      KONG_SMTP_HOST: "smtp"
      KONG_SMTP_PORT: 1025
      KONG_NGINX_WORKER_PROCESSES: 1
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: "/srv/shared/ssl/cluster.crt,/srv/shared/ssl/ca.crt,system"
      KONG_PORTAL_CORS_ORIGINs: "*"
  kong-dp:
    networks:
      - kong-net
    image: ${KONG_IMAGE:-kong/kong-gateway:latest}
    container_name: kong-dp
    hostname: kong-dp
    depends_on:
      - kong-cp
    volumes:
      - ${PWD}/logs:/srv/shared/logs
      - ${PWD}/ssl:/srv/shared/ssl
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    ports:
      - "8000:8000/tcp"
      - "8443:8443/tcp"
      - "8101:8101/tcp"
    environment:
      KONG_NGINX_WORKER_PROCESSES: 1
      KONG_PLUGINS: bundled
      KONG_LOG_LEVEL: "debug"
      KONG_ROLE: "data_plane"
      KONG_LICENSE_DATA: ${KONG_LICENSE_DATA}
      KONG_CLUSTER_CERT: "/srv/shared/ssl/cluster.crt"
      KONG_CLUSTER_CERT_KEY: "/srv/shared/ssl/cluster.key"
      KONG_LUA_SSL_TRUSTED_CERTIFICATE: "/srv/shared/ssl/cluster.crt,/srv/shared/ssl/ca.crt,system"
      KONG_CLUSTER_CONTROL_PLANE: "kong-cp:8005"
      KONG_CLUSTER_TELEMETRY_ENDPOINT: "kong-cp:8006"
      KONG_PROXY_LISTEN: "0.0.0.0:8000, 0.0.0.0:8443 http2 ssl"
      # KONG_STREAM_LISTEN: "0.0.0.0:5555, 0.0.0.0:5556 ssl reuseport backlog=65536"
      KONG_STATUS_LISTEN: "0.0.0.0:8101"
      KONG_PROXY_URI: ${KONG_PROXY_URI:-http://localhost:8000}
      KONG_DATABASE: "off"
      KONG_ANONYMOUS_REPORTS: "off"
      KONG_VITALS: "on"
      KONG_SSL_CERT_KEY: "/srv/shared/ssl/server.key"
      KONG_SSL_CERT: "/srv/shared/ssl/server.crt"
      KONG_TRACING: "on"
      KONG_TRACING_WRITING_STRATEGY: "file"
      KONG_TRACING_TYPES: "all"
      KONG_TRACING_TIME_THRESHOLD: 0
      KONG_TRACING_WRITE_ENDPOINT: /srv/shared/logs/granular_tracing.log
      KONG_TRACING_DEBUG_HEADER: X-Trace

  svc-eu:
    image: containous/whoami
    container_name: svc-eu
    hostname: svc-eu
    networks:
      - kong-net
  
  svc-us:
    image: containous/whoami
    container_name: svc-us
    hostname: svc-us
    networks:
      - kong-net
  
  svc-ch:
    image: containous/whoami
    container_name: svc-ch
    hostname: svc-ch
    networks:
      - kong-net

  registry:
    container_name: registry
    hostname: registry
    build: ./json-server
    ports:
      - "3000:3000"
    volumes:
      - ./json-server/db.json:/app/db.json:delegated
      # - ./public:/public:delegated
    restart: unless-stopped
    networks:
      - kong-net

volumes:
  pgdata:
